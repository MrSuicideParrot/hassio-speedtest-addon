#!/usr/bin/with-contenv bashio

set -e

export ACCEPT_EULA=$(bashio::config 'accept_eula')
export ACCEPT_RGPD=$(bashio::config 'accept_rgpd')

if [[ $(bashio::config 'print_closest_servers') == "true" ]]; then
    /usr/local/bin/speedtest -L --accept-license --accept-gdpr
    exit 0
fi

if [[ "$ACCEPT_EULA" != "true" || "$ACCEPT_RGPD" != "true" ]]; then
    bashio::log.fatal "Licenses were not accepted!"
    exit 1
fi

if [[ $(bashio::config 'debug') == "true" ]]; then
    bashio::log.level "debug"
fi

function post_result() {
    local sensor=${1}
    local unitmeasure=${2}
    local state=${3}
    local serverid=${4}
    local servername=${5}
    local serverlocation=${6}
    local servercountry=${7}


    if [ "$sensor" = "ping" ]; then
    	local data="{\"state\":$state, \"attributes\":{\"state_class\":\"measurement\",\"unit_of_measurement\":\"$unitmeasure\",\"server_name\":$servername,\"server_location\":$serverlocation,\"server_country\":$servercountry,\"server_id\":\"$serverid\"}}"
    elif [ "$sensor" = "download" ]; then
    	local bytes=${8}
	local data="{\"state\":$state, \"attributes\":{\"state_class\":\"measurement\",\"unit_of_measurement\":\"$unitmeasure\",\"server_name\":$servername,\"server_location\":$serverlocation,\"server_country\":$servercountry,\"server_id\":\"$serverid\",\"bytes_received\":$bytes}}"
    else
	local bytes=${8}
	local data="{\"state\":$state, \"attributes\":{\"state_class\":\"measurement\",\"unit_of_measurement\":\"$unitmeasure\",\"server_name\":$servername,\"server_location\":$serverlocation,\"server_country\":$servercountry,\"server_id\":\"$serverid\",\"bytes_sent\":$bytes}}"
    fi

    bashio::api.supervisor POST "/core/api/states/sensor.speedtest_$sensor" "$data"

    bashio::log.info "$sensor updated"
}

bashio::log.info "Starting speed test"

if bashio::config.exists 'server_id'; then
    export SERVER_ID=$(bashio::config 'server_id')
    export RESULT=$(/usr/local/bin/speedtest --format=json --precision=4 --accept-license --accept-gdpr -s "$SERVER_ID")
else
    export RESULT=$(/usr/local/bin/speedtest --format=json --precision=4 --accept-license --accept-gdpr)
fi

bashio::log.debug "Speedtest output: ${RESULT}"

export down_load_speed=$(printf %.2f "$(($(echo $RESULT | jq .download.bandwidth)*8/10000))e-2")
export down_bytes=$(echo $RESULT | jq .download.bytes)
export up_load_speed=$(printf %.2f "$(($(echo $RESULT | jq .upload.bandwidth)*8/10000))e-2")
export up_bytes=$(echo $RESULT | jq .upload.bytes)
export ping_latency=$(echo $RESULT | jq .ping.latency)
export used_server_id=$(echo $RESULT | jq .server.id)
export used_server_name=$(echo $RESULT | jq .server.name)
export used_server_location=$(echo $RESULT | jq .server.location)
export used_server_country=$(echo $RESULT | jq .server.country)

bashio::log.info "--------- Speed test ended ---------"
bashio::log.info "Download measured: $down_load_speed"
bashio::log.info "Upload: $up_load_speed"
bashio::log.info "Ping: $ping_latency"
bashio::log.info "Server name: $used_server_name"
bashio::log.info "Server location: $used_server_location"
bashio::log.info "Server id: $used_server_id"
bashio::log.info "Server country: $used_server_country"
bashio::log.info "--------- ---------"

post_result "download" "Mbit/s" $down_load_speed $used_server_id "$used_server_name" "$used_server_location" "$used_server_country" $down_bytes
post_result "upload" "Mbit/s" $up_load_speed $used_server_id "$used_server_name" "$used_server_location" "$used_server_country" $up_bytes
post_result "ping" "ms" $ping_latency $used_server_id "$used_server_name" "$used_server_location" "$used_server_country"
