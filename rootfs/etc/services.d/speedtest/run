#!/usr/bin/with-contenv bashio

export ACCEPT_EULA=$(bashio::config 'accept_eula')
export ACCEPT_RGPD=$(bashio::config 'accept_rgpd')

if [[ "$ACCEPT_EULA" != "true" || "$ACCEPT_RGPD" != "true" ]]; then
    bashio::log.fatal "Licenses were not accepted!"
    exit 1
fi

function post_result() {
    local sensor=${1}
    local unitmeasure=${2}
    local friendlyname=${3}
    local state=${4}

    local data="{\"state\":$state, \"attributes\":{\"unit_of_measurement\":\"$unitmeasure\",\"friendly_name\":\"$friendlyname\",\"icon\":\"mdi:speedometer\"}}"
    
    bashio::api.supervisor POST "/core/api/states/sensor.speedtest_$sensor" "$data"

    return "$friendlyname updated"
}

bashio::log.info "Starting speed test"

if bashio::config.exists 'server_id'; then
    export SERVER_ID=$(bashio::config 'server_id')
    export RESULT=$(/usr/bin/speedtest --format=json --precision=4 --accept-license --accept-gdpr -s "$SERVER_ID")
else
    export RESULT=$(/usr/bin/speedtest --format=json --precision=4 --accept-license --accept-gdpr)
fi

export down_load_speed=$(($(bashio::jq $RESULT .download.bandwidth)*8/1000000))
export up_load_speed=$(($(bashio::jq $RESULT .upload.bandwidth)*8/1000000))
export ping_latency=$(bashio::jq $RESULT .ping.latency)

bashio::log.info "--------- Speed test ended ---------"
bashio::log.info "Download measured: $down_load_speed"
bashio::log.info "Upload: $up_load_speed"
bashio::log.info "Ping: $ping_latency"
bashio::log.info "--------- ---------"

post_result "download" "Mbit/s" "Speedtest Download" $down_load_speed
post_result "upload" "Mbit/s" "Speedtest Upload" $up_load_speed
post_result "ping" "ms" "Speedtest Ping" $ping_latency
